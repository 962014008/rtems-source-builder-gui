import wxfrom wx.lib.buttons import GenBitmapTextButtonimport os,sysbase = os.path.dirname(sys.argv[0])sys.path.insert(0, base + '.../sb')class ConsolePanel(wx.Panel):    def AddTextConsole(self,text):        self.console.AppendText(text+"\n")    def __init__(self,parent,*args,**kw):        wx.Panel.__init__(self,parent,*args,**kw)        sizer=wx.BoxSizer(wx.VERTICAL)                self.console=wx.TextCtrl(self,style=wx.TE_MULTILINE)        self.console.SetEditable(False)        self.console.SetBackgroundColour((53,53,53))        self.console.SetForegroundColour("white")        font = wx.Font(13, wx.DEFAULT, wx.NORMAL, wx.NORMAL, False, "Courier New")        self.console.SetFont(font)        self.AddTextConsole("RTEMS Source Builder Log")                sizer.Add(self.console,1,wx.EXPAND)        self.SetSizer(sizer)class MainPanel(wx.Panel):    def __init__(self,parent,*args,**kw):        wx.Panel.__init__(self,parent,*args,**kw)        sizer=wx.BoxSizer(wx.VERTICAL)                self.noteBookMain=wx.Notebook(self)        self.noteBookMain.AddPage(wx.Panel(self.noteBookMain), "General")        sizer.Add(self.noteBookMain,1,wx.EXPAND)        self.SetSizer(sizer)        class MyFrame(wx.Frame):    """ Our main frame """    def OnSize(self,event):        self.Refresh()    def closeWindow(self,event):        dial = wx.MessageDialog(None, 'You are about to exit this program. The data you entered will not be saved. Would you like to close this application?','Confirm',  wx.YES | wx.NO|wx.ICON_EXCLAMATION)        if dial.ShowModal() == wx.ID_YES:            self.Destroy()        dial.Destroy()    def CreateMenuBar(self):                    self.menubar = wx.MenuBar()        menu = wx.Menu()        m_open = menu.Append(wx.ID_OPEN, "Open File...\tCtrl + O")        menu.AppendSeparator()        m_exit = menu.Append(wx.ID_EXIT, "Exit\tAlt + Q")        self.Bind(wx.EVT_MENU,lambda event: self.openFileDialog(), m_open)        self.Bind(wx.EVT_MENU, self.closeWindow, m_exit)        self.menubar.Append(menu, "&File")                menu = wx.Menu()        m_about = menu.Append(wx.ID_ABOUT, "&Program Help")                info = wx.AboutDialogInfo()         info.SetName('RTEMS Source Builder')        info.SetVersion('1.0')        info.SetDescription('')        info.SetWebSite('')        self.Bind(wx.EVT_MENU, lambda event: wx.AboutBox(info), m_about)        helpMenu=self.menubar.Append(menu, "&Help")        self.SetMenuBar(self.menubar)    def __init__(self, parent, title):        wx.Frame.__init__(self, parent, title=title, size=(789,200))        self.CreateMenuBar()        consolesplitter = wx.SplitterWindow(self)        panel = wx.Panel(consolesplitter)        self.mainPanel = MainPanel(consolesplitter,style=wx.DOUBLE_BORDER)		#############################        self.buttonsDock = wx.Panel(self)                bmpDone=wx.ArtProvider.GetBitmap(wx.ART_TICK_MARK,wx.ART_BUTTON)        self.btnDone = GenBitmapTextButton(self.buttonsDock,-1,bmpDone ,"Build",size=(200,-1))        bmpCancel=wx.ArtProvider.GetBitmap(wx.ART_CROSS_MARK,wx.ART_BUTTON)        self.btnCancel = GenBitmapTextButton(self.buttonsDock,-1,bmpCancel ,"Exit",size=(200,-1))        self.btnCancel.Bind(wx.EVT_BUTTON,self.closeWindow)                self.btnDone.Disable()        self.btnDone.SetBackgroundColour("WHITE");self.btnCancel.SetBackgroundColour("WHITE")        self.btnDone.Bind(wx.EVT_BUTTON,lambda event: self.doneClick())        vbox = wx.BoxSizer(wx.VERTICAL)        hbox1 = wx.BoxSizer(wx.HORIZONTAL)        hbox2 = wx.BoxSizer(wx.HORIZONTAL)        hbox2.Add(self.btnDone,0,wx.ALL,5)        hbox2.Add(self.btnCancel,0,wx.ALL,5)        vbox.Add(hbox2, proportion=0, flag=wx.CENTER)        self.buttonsDock.SetSizer(vbox)		##############################		        vbox = wx.BoxSizer(wx.VERTICAL)        hbox1 = wx.BoxSizer(wx.HORIZONTAL)        hbox2 = wx.BoxSizer(wx.HORIZONTAL)        vbox.Add(hbox2, proportion=0, flag=wx.CENTER)        headerBox=wx.BoxSizer(wx.HORIZONTAL)        headerVBox=wx.BoxSizer(wx.VERTICAL)        if os.path.isfile("res\header.png"):            bmpLogo = wx.Image("res\header.png", wx.BITMAP_TYPE_ANY).ConvertToBitmap()        else:            bmpLogo=wx.ArtProvider.GetBitmap(wx.ART_INFORMATION,wx.ART_BUTTON)        imgLogo=wx.StaticBitmap(self,-1,bmpLogo)        headerBox.Add(imgLogo)        self.colorFillerPanel=wx.Panel(self)        self.colorFillerPanel.SetBackgroundColour((56, 83, 47))                informationBox=wx.BoxSizer(wx.HORIZONTAL)        hInfoBox=wx.BoxSizer(wx.HORIZONTAL)                self.colorFillerPanel.SetSizer(informationBox)        hInfoBox.Add(self.colorFillerPanel,1,wx.EXPAND)        headerVBox.Add(hInfoBox,1,wx.EXPAND)        headerBox.Add(headerVBox,1,wx.EXPAND)        sizer = wx.BoxSizer(wx.VERTICAL)        sizer.Add(headerBox,0,wx.EXPAND)        sizer.Add(consolesplitter, 1, wx.EXPAND|wx.ALL,10)	sizer.Add(self.buttonsDock, flag=wx.EXPAND)        ### Add Console Log	consolePanel=ConsolePanel(consolesplitter)        consolesplitter.SplitHorizontally(self.mainPanel, consolePanel)        consolesplitter.SetMinimumPaneSize(200)        ###        self.SetMinSize((650, 400))        self.SetSizer(sizer)        self.Centre()        self.SetBackgroundColour("WHITE")                self.Show(True)                  self.Bind(wx.EVT_CLOSE,self.closeWindow)        app = wx.App(False)frame = MyFrame(None, 'RTEMS Source Builder')app.MainLoop()